// 1.0 NORMALIZATION
// =================

html
  font-family: sans-serif

body
  margin: 0

article, aside, details, figcaption, figure, footer, header, hgroup, main, nav, section, summary
  display: block

audio, canvas, progress, video
  display: inline-block
  vertical-align: baseline

audio:not([controls])
  display: none

[hidden], template
  display: none

a
  background: transparent
  &:active, &:hover
    outline: 0

abbr[title]
  border-bottom: 1px dotted

dfn
  font-style: italic

small
  font-size: 80%

sub
  font-size: 75%
  line-height: 0
  position: relative
  vertical-align: baseline
sup
  font-size: 75%
  line-height: 0
  position: relative
  vertical-align: baseline
  top: -0.5em
sub
  bottom: -0.25em

img
  border: 0

svg:not(:root)
  overflow: hidden

hr
  -moz-box-sizing: content-box
  box-sizing: content-box
  height: 0

pre
  overflow: auto

code, kbd, pre, samp
  font-family: monospace, monospace
  font-size: 1em

button, input, optgroup, select, textarea
  color: inherit
  font: inherit
  margin: 0

button
  overflow: visible
  text-transform: none

select
  text-transform: none

button, html input[type="button"]
  -webkit-appearance: button
  cursor: pointer

input
  &[type="reset"], &[type="submit"]
    -webkit-appearance: button
    cursor: pointer

button[disabled]
  cursor: default

button
  border: 0
  padding: 0

input
  line-height: normal

  &[type="checkbox"], &[type="radio"]
    box-sizing: border-box
    padding: 0

  &[type="search"]
    box-sizing: content-box

fieldset
  border: 1px solid #c0c0c0
  margin: 0 2px
  padding: 0.35em 0.625em 0.75em

legend
  border: 0
  padding: 0

textarea
  overflow: auto

optgroup
  font-weight: bold

// 1 CORE STYLES
// ===========

// 1.1 Base

*
  box-sizing: border-box

iframe
  width: 100%
  border: 0
  padding: 15px
  margin-bottom: 25px

// 1.2 Mixins

=text-inputs
  input[type="date"],
  input[type="datetime"],
  input[type="datetime-local"],
  input[type="email"],
  input[type="month"],
  input[type="number"],
  input[type="password"],
  input[type="tel"],
  input[type="search"],
  input[type="text"],
  input[type="time"],
  input[type="url"],
  input[type="week"]
    @content

=fadeInDown
  animation-duration: 0.25s
  animation-timing-function: ease
  animation-fill-mode: both
  animation-name: fadeInDown

// Block, component, etc. selector shortcuts

// Block
=b($name)
  [data-block="#{$name}"]
    @content

// Component
=component($name)
  [data-component="#{$name}"]
    @content

// Page
=page($controller: null, $action: null)
  $selector: ''
  @if $controller != null
    $selector: "[data-controller='#{$controller}']"
  @if $action != null
    $selector: "#{$selector}[data-action='#{$action}']"
  #{$selector}
    @content

// 1.3 Animations

@keyframes fadeInDown
  0%
    opacity: 0
    transform: translateY(-20px)

  100%
    opacity: 1
    transform: translateY(0)

// 1.3 Components

// 1.3.1 Tables

=table-default($blank: false, $zebra: false, $hover: false, $border-color: lightgray, $bordered: false)
  border-collapse: collapse
  background: white
  border-spacing: 0
  empty-cells: show
  border: 1px solid $border-color
  width: 100%
  margin-bottom: 25px

  pre
    margin: 0

  thead
    background: lightgray
    color: black
    text-align: left
    vertical-align: bottom
    border-bottom: 1px solid transparent

    th
      font-weight: bold
      text-align: left
      border-color: $border-color
      border-bottom-width: 0px

  th, td
    background-color: transparent
    border-width: 0 0 0 1px
    font-size: inherit
    margin: 0
    overflow: visible
    padding: (25px/6) (25px/4)
    line-height: normal
    border-left: 1px solid $border-color

    &:first-child
      border-left-width: 0

  @if $hover == true
    +table-hover

  @if $blank == true
    +table-blank

  @if $zebra == true
    +table-zebra

  @if $bordered == true
    +table-bordered

  @content

=table-bordered-default
  td
    border-bottom-color: inherit
    border-bottom-width: 1px
    border-bottom-style: solid

  thead
    border-bottom-color: inherit

=table-blank-default
  border-color: transparent
  background: transparent
  table, tr, td, tbody, thead, th, tfoot
    border-color: transparent
    background: transparent
  th, td
    border-color: transparent

    &:first-child
      border-color: transparent
      padding:
        left: 0px

    &:last-child
      border-color: transparent
      padding:
        right: 0px

=table-hover-default
  tbody, thead
    tr:hover
      background-color: cornflowerblue

      td, th
        color: white

=table-zebra-default
  tbody, thead
    tr:nth-child(even)
      background-color: lightgray

// 1.3.2 Grid

$phone: 360px
$phablet: 480px
$tablet: 768px
$tablet-landscape: 960px
$desktop: 1024px
$large-monitor: 1200px
$xl-monitor: 1400px
$xxl-monitor: 1800px

// Media query generator
=gt($query: $phone)
  @media screen and (min-width: $query)
    @content

$grid-columns: 12
$grid-gutter: 15px

// Grid breakpoints
// ----------------
// Critical breakpoints where offsets and alternative grid styles will
// be displayed

$showOffsets:        $tablet-landscape // Offsets render at this breakpoint
$showColumns:        $phablet          // Allow < 12 columns
$showPartialColumns: $tablet           // Simpler alternative to actual columns
$showFullColumns:    $desktop          // Actual user-defined column measurement

=wrapper-default($fluid: false)
  margin: 0px auto

  @if $fluid == false
    max-width: $tablet
  padding:
    left: 25px
    right: 25px

  @if $fluid == false
    @media screen and (min-width: $showOffsets)
      max-width: $desktop

    @media screen and (min-width: $xxl-monitor)
      max-width: $large-monitor

=row
  display: inline-flex
  width: calc(100% + #{$grid-gutter})
  justify-content: flex-start
  align-items: stretch
  flex-wrap: wrap
  margin:
    left: -$grid-gutter/2
    right: -$grid-gutter/2

=column-universals
  // For smaller CSS, this can be applied in one rule, rather
  // than in a loop for every type of column.
  clear: none
  display: block
  margin:
    left: $grid-gutter/2
    right: $grid-gutter/2

=measure-columns($columns, $prop)
  // TODO: DRY this somehow?
  @if $prop == "width"
    width: calc(#{percentage($columns/$grid-columns)} - #{$grid-gutter})

  @else if $prop == "margin-left"
    margin-left: calc(#{percentage($columns/$grid-columns)} + #{$grid-gutter/2})

  @else if $prop == "margin-right"
    margin-right: calc(#{percentage($columns/$grid-columns)} - #{(($grid-columns/$columns - 1) * $grid-gutter)/($grid-columns/$columns) - $grid-gutter})

=set-offset($columns, $side: "margin-right")
  // Never show leftes and rights on mobile
  // +measure-columns(0, $side)

  // Look for keywords
  @if $columns == "half"
    @media screen and (min-width: $showPartialColumns)
      +measure-columns(6, $side)

  @else if $columns == "third"
    @media screen and (min-width: $showPartialColumns)
      +measure-columns(6, $side)

    @media screen and (min-width: $showFullColumns)
      +measure-columns(4, $side)

  @else if $columns == "twothirds"
    @media screen and (min-width: $showPartialColumns)
      +measure-columns(6, $side)

    @media screen and (min-width: $showFullColumns)
      +measure-columns(8, $side)

  @else
    @media screen and (min-width: $showPartialColumns)
      +measure-columns($columns, $side)

// Convenience mixins
=right($columns)
  +set-offset($columns, "margin-right")
=left($columns)
  +set-offset($columns, "margin-left")

=set-column($columns, $left, $right)
  +measure-columns($columns, "width")

  @if $right != 0
    +set-offset($right, "margin-right")

  @if $left != 0
    +set-offset($left, "margin-left")

=column($columns: 12, $left: 0, $right: 0, $constants: true)
  // Everything is a full width column on mobile by default
  +set-column(12, 0, 0)

  @if $constants == true
    +column-universals

  // Look for keywords
  @if $columns == "half"
    @media screen and (min-width: $showPartialColumns)
      +set-column($grid-columns/2, $left, $right)

  @else if $columns == "third"
    @media screen and (min-width: $showPartialColumns)
      +set-column($grid-columns/2, $left, $right)
    @media screen and (min-width: $showFullColumns)
      +set-column($grid-columns/3, $left, $right)

  @else if $columns == "twothirds"
    @media screen and (min-width: $showPartialColumns)
      +set-column($grid-columns/2, $left, $right)
    @media screen and (min-width: $showFullColumns)
      +set-column(($grid-columns * 2/3), $left, $right)

  @else
    // No keywords found, pass in values.
    @media screen and (min-width: $showColumns)
      +set-column($columns, $left, $right)
